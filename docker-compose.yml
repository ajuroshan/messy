services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    restart: unless-stopped
    networks:
      - nginx_network

  db:
    image: postgres:17
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nginx_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    restart: unless-stopped
    env_file: .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/code/static
      - ./media:/code/media
      - ./nginx/secure/:/etc/nginx/templates/
      -  /etc/localtime:/etc/localtime:ro
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/99-autoreload.sh:/docker-entrypoint.d/99-autoreload.sh
    depends_on:
      - web
    networks:
      - nginx_network

  certbot:
      image: certbot/certbot
      volumes:
        - ./nginx/certbot/conf:/etc/letsencrypt
        - ./nginx/certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"  # Renew certificates every 12 hours

networks:
  nginx_network:

volumes:
  postgres_data:
